name: 'Golang Versioner'
description: 'A lightweight versioning system based on changesets and targeted for Go.'
inputs:
  github-token:
    description: 'The GitHub token to use for authentication.'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Versioner Setup
      shell: bash
      id: versioner
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global init.defaultBranch ${{ github.ref_name }}
        if [ ! -f "package.json" ]; then
          json="{\"name\":\"@${{ github.repository }}\",\"private\":true,\"version\":\"0.0.0\",\"packageManager\":\"pnpm@8.8.0\"}"
          echo $json > package.json
          touch .gitignore
          git add package.json
        fi
        if ! grep -q "node_modules" .gitignore; then
            echo "node_modules" >> .gitignore
            git add .gitignore
        fi
        if ! grep -q "pnpm-lock.yaml" .gitignore; then
            echo "pnpm-lock.yaml" >> .gitignore
            git add .gitignore
        fi
        changes_exist=$(git status --porcelain)
        if [ -n "$changes_exist" ]; then
          echo "Changes exist that need to be committed"
          git commit -m "chore: versioning setup"
          git push
        else
          echo "No changes need to be committed"
        fi
        echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

    # Only run changesets workflow on push events
    - name: Setup Dependencies for Changesets
      if: github.event_name == 'push'
      shell: bash
      run: |
        pnpm add @changesets/cli
        echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH
      uses: pnpm/action-setup@v4

    - name: Create Release Pull Request
      if: github.event_name == 'push'
      uses: changesets/action@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    # Only run release on merged PRs from changeset-release branches
    - name: Release
      uses: softprops/action-gh-release@v2
      if: |
        github.event_name == 'pull_request' && 
        github.event.pull_request.merged == true && 
        startsWith(github.event.pull_request.head.ref, 'changeset-release/')
      with:
        generate_release_notes: true
        make_latest: true
        tag_name: "v${{ steps.versioner.outputs.version }}"
        token: ${{ inputs.github-token }}